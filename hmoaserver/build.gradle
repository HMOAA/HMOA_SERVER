plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.9'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'hmoa'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext {
	springCloudVersion = '2021.0.1'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
	}
}

repositories {
	mavenCentral()
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'com.google.code.gson:gson'
	implementation 'io.sentry:sentry-spring-boot-starter:6.2.1'
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

    // database 설정
	runtimeOnly('org.mariadb.jdbc:mariadb-java-client')

	//jwt
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	//swagger
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'

	implementation 'commons-io:commons-io:2.6'

	//S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	//push
	implementation 'com.google.firebase:firebase-admin:9.2.0'

	//h2
	implementation 'com.h2database:h2'

	//aop
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	//bootpay
	implementation 'io.github.bootpay:backend:+'

	//cache
	implementation("org.springframework.boot:spring-boot-starter-cache")
	implementation("com.github.ben-manes.caffeine:caffeine:3.1.8")
}

tasks.named('test') {
	useJUnitPlatform()
}

task localDeploy(type: Exec) {
	group = 'Docker'
	description = 'Builds the project and starts docker-compose'

	// BootJar 태스크를 실행하여 Spring Boot 애플리케이션을 빌드
	dependsOn 'bootJar'

	// 작업 디렉토리를 명시적으로 설정
	workingDir "$projectDir"

	// Windows에서 cmd를 사용하여 docker-compose 실행
	commandLine 'cmd', '/c', 'docker-compose -f docker-compose-local.yml up --build -d'
}
